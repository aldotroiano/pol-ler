"""
Django settings for frontend project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_DIR = os.path.join(BASE_DIR, 'frontend')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Set via environment variable for security. Generate with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'this-is-a-secret')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# CSRF Settings - Allow trusted origins
# Can be set via CSRF_TRUSTED_ORIGINS environment variable as comma-separated list
CSRF_TRUSTED_ORIGINS = []
if os.environ.get('CSRF_TRUSTED_ORIGINS'):
    CSRF_TRUSTED_ORIGINS = [origin.strip() for origin in os.environ.get('CSRF_TRUSTED_ORIGINS').split(',')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'pipeline',
    'frontend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'frontend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'frontend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'politepol',
        'USER': 'poluser',
        'PASSWORD': 'polpassword',
        'HOST': 'db-pol-ler',
        'PORT': '5432'
    }
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en', 'English'),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(PROJECT_DIR, "assets"),
)

STATIC_ROOT = os.path.join(PROJECT_DIR, 'static/')

STATICFILES_STORAGE = 'pipeline.storage.PipelineManifestStorage'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)

# Pipeline configuration for django-pipeline 3.x
PIPELINE = {
    'PIPELINE_ENABLED': True,
    'COMPILERS': (
        'pipeline.compilers.less.LessCompiler',
        'pipeline.compilers.sass.SASSCompiler',
    ),
    'STYLESHEETS': {
        'app': {
            'source_filenames': (
              'frontend/stylesheets/application.css',
              'frontend/stylesheets/bootstrap_and_overrides.css.less',
              'frontend/stylesheets/wizard.css.scss',
              'frontend/stylesheets/google-code-prettify/prettify.css',
            ),
            'output_filename': 'frontend/stylesheets/app.css',
            'extra_context': {
                'media': 'all',
            },
        },
    },
    'JAVASCRIPT': {
        'app': {
            'source_filenames': (
              'frontend/js/jquery.js',
              'frontend/js/jquery.browser.js',
              'frontend/js/jquery.jfeed.js',
              'frontend/js/bootstrap.js',
              'frontend/js/bootstrap_and_overrides.js',
              'frontend/js/xregexp-all.js',
              'frontend/js/google-code-prettify/prettify.js',
              'frontend/js/setup-tool.js',
              'frontend/js/setup-tool-ext.js',
              'frontend/js/help.js',
            ),
            'output_filename': 'frontend/js/app.js',
        }
    }
}

DOWNLOADER_PAGE_URL = '/downloader?url='

FEED_PAGE_URL = '/feed/'

DOWNLOADER_USER_AGENT = 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36'
# limit of seconds in which user can access separate feed
FEED_REQUEST_PERIOD_LIMIT = 0
SNAPSHOT_DIR = '/tmp'
